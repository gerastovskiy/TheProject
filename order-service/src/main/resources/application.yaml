server:
  port: 8083

spring:
  datasource:
    username: ${DB_USER:order_db}
    password: ${DB_PASSWORD:postgres}
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:order_db}
    driverClassName: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        enable_lazy_load_no_trans: false
        order_inserts: true
        jdbc.batch_size: 100
        ddl-auto: validate
        validator:
          fail_fast: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    locations: classpath:db/migration
    validate-on-migrate: false
    baseline-on-migrate: true
    baseline-version: 1
    table: flyway_schema_history_order
  rabbitmq:
    username: ${MQ_USER:rabbit-mq}
    password: ${MQ_PASSWORD:rabbit-mq}
    host: ${MQ_HOST:localhost}
    port: ${MQ_PORT:5672}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:password}

logging:
  level:
    com:
      rabbitmq:
        client: debug
    org:
      springframework:
        amqp: debug
        retry: debug
      hibernate:
        type: trace
        stat: debug
        orm:
          jdbc:
            bind: trace

rabbitmq:
  exchange:
    name: amq.topic
  order-routing-key:
    name: message.order.events
  billing-routing-key:
    name: message.billing.events
  store-routing-key:
    name: message.store.events
  delivery-routing-key:
    name: message.delivery.events
  notification-routing-key:
    name: message.notification.events
  queue:
    name: "*.order.events"

#service:
#  billing:
#    url: http://${BILLING_HOST:localhost}:${BILLING_PORT:8082}

management:
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health,prometheus
    health:
      show-details: always
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true

auth:
  enabled: true
  jwt:
    secret: ${JWT_SECRET:9c414a661d00ad35845101c010f1fd461597e123e11851a64f6b6d270d23bfaa}