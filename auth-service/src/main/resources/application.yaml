server:
  port: 8081

spring:
  application:
    name: auth-service
  datasource:
    username: ${DB_USER:auth_db}
    password: ${DB_PASSWORD:postgres}
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:auth_db}
    driverClassName: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        enable_lazy_load_no_trans: false
        generate_statistics: true
        jdbc.batch_size: 100
        ddl-auto: validate
        order_inserts: true
        order_updates: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    locations: classpath:db/migration
    validate-on-migrate: false
    baseline-on-migrate: true
    baseline-version: 1
    table: flyway_schema_history_auth

logging:
  level:
    root: info
    com:
      rabbitmq:
        client: debug
    org:
      flywaydb: debug
      springframework:
        web: debug
        data:
          redis: warn
        amqp: warn
        transaction: info
        jdbc:
          core: debug
      hibernate:
        type.descriptor.sql: trace
        stat: info
        sql: debug
        orm.jdbc.bind: trace
    io.micrometer.tracing: info
    io.opentelemetry: info
    #io.opentelemetry.exporter.otlp: debug
    #io.opentelemetry.sdk.trace: debug
    reactor.netty: info

management:
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health, info, prometheus, metrics
    health:
      show-details: always
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    enabled: true
    sampling:
      probability: 1.0
    baggage:
      remote-fields: "*"
    propagation:
      type: w3c
  otlp:
    tracing:
      endpoint: http://jaeger:4318/v1/traces
  opentelemetry:
    resource-attributes:
      service.name: ${spring.application.name}

auth:
  jwt:
    secret: 9c414a661d00ad35845101c010f1fd461597e123e11851a64f6b6d270d23bfaa
    issuer: auth-service
    expiration-minutes: 30
    audience: user-service,billing-service,order-service,store-service